/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package student;

import static java.awt.event.KeyEvent.VK_BACK_SPACE;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class registration extends javax.swing.JFrame {

    /**
     * Creates new form registration
     */
    public registration() {
        initComponents();
        table_update();
        add.setMnemonic('a');
        delete.setMnemonic('d');
        edit.setMnemonic('e');
        refresh.setMnemonic('r');

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtMobile = new javax.swing.JTextField();
        txtCourse = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtRollNo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        display = new javax.swing.JTable();
        refresh = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 1), new java.awt.Dimension(0, 1), new java.awt.Dimension(32767, 1));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel1.setText("Student Registration");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Registration"));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        add.setText("ADD");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        edit.setText("EDIT");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        jLabel3.setText("Name :");

        jLabel4.setText("Mobile No :");

        jLabel5.setText("Course :");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        txtMobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMobileKeyPressed(evt);
            }
        });

        jLabel2.setText("Roll no :");

        txtRollNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRollNoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel5)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtRollNo)
                    .addComponent(txtName)
                    .addComponent(txtMobile)
                    .addComponent(txtCourse))
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addComponent(add)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(delete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(edit)
                .addGap(6, 6, 6))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtRollNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtMobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edit)
                    .addComponent(delete)
                    .addComponent(add))
                .addContainerGap())
        );

        display.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "     Roll No.", "     Name", "     Mobile", "     Course"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        display.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                displayMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(display);
        if (display.getColumnModel().getColumnCount() > 0) {
            display.getColumnModel().getColumn(0).setPreferredWidth(8);
        }

        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setToolTipText("");

        jLabel7.setText("Alt-a=add");

        jLabel8.setText("Alt-d=delete");

        jLabel9.setText("Alt-e=edit");

        jLabel10.setText("Alt-r=refresh");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addContainerGap(16, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(filler1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refresh)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(287, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(256, 256, 256))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(refresh)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed
    Connection con1;
    PreparedStatement insert;

    private String check_table() throws ClassNotFoundException, SQLException {

        String rollNo = txtRollNo.getText();
        String mobile = txtMobile.getText();

        Class.forName("com.mysql.jdbc.Driver");

        con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/student", "root", "Suman123");
        insert = con1.prepareStatement("select count(rollNo) from registration where rollNo=?");
        insert.setString(1, rollNo);
        ResultSet rs = insert.executeQuery();
        rs.next();
        int countRoll = rs.getInt("count(rollNo)");
        rs.close();
        if (countRoll == 1) {
            return "Roll";
        } else {
            insert = con1.prepareStatement("select count(mobile) from registration where mobile=?");
            insert.setString(1, mobile);
            ResultSet rss = insert.executeQuery();
            rss.next();
            int countMobile = rss.getInt("count(mobile)");
            rss.close();
            if (countMobile == 1) {
                return "Mobile";
            }
        }
        return "";

    }

    private void table_update() {

        try {
            Class.forName("com.mysql.jdbc.Driver");

            con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/student", "root", "Suman123");
            insert = con1.prepareStatement("select rollNo,name,mobile,course from registration");
            ResultSet rs = insert.executeQuery();

            DefaultTableModel Df = (DefaultTableModel) display.getModel();
            Df.setRowCount(0);

            while (rs.next()) {
                Vector v2 = new Vector();
                v2.add(rs.getInt("rollNo"));
                v2.add(rs.getString("name"));
                v2.add(rs.getString("mobile"));
                v2.add(rs.getString("course"));
                Df.addRow(v2);

            }
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this, "Record Not displayed");
            Logger.getLogger(registration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        String name = txtName.getText();
        String mobile = txtMobile.getText();
        String course = txtCourse.getText();
        String rollNo = txtRollNo.getText();
        
        

        try {
            String check = check_table();
            if (mobile.length() == 10 && name.length() > 2 && course.length() >= 4 && rollNo.length() != 0 && check == "") {

                String Name = name.substring(0, 1).toUpperCase() + name.substring(1);
                String Course = course.substring(0, 1).toUpperCase() + course.substring(1);

                Class.forName("com.mysql.jdbc.Driver");

                con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/student", "root", "Suman123");
                insert = con1.prepareStatement("insert into registration(name, mobile,course,rollNo)values(?,?,?,?)");
                insert.setString(1, Name);
                insert.setString(2, mobile);
                insert.setString(3, Course);
                insert.setString(4, rollNo);
                insert.executeUpdate();

                JOptionPane.showMessageDialog(this, "Record Added");
                table_update();

                txtRollNo.setText("");
                txtName.setText("");
                txtMobile.setText("");
                txtCourse.setText("");

                txtRollNo.requestFocus();
            } else {
                if (check == "Roll") {
                    JOptionPane.showMessageDialog(this, "Duplicate roll no.");
                } else if (check == "Mobile") {
                    JOptionPane.showMessageDialog(this, "Duplicate Mobile no.");
                } else if (rollNo.length() == 0) {
                    JOptionPane.showMessageDialog(this, "invalid rollNo.");
                    txtRollNo.requestFocusInWindow();
                } else if (name.length() < 3) {
                    JOptionPane.showMessageDialog(this, "invalid name(must be min 3 character)");
                    txtName.requestFocusInWindow();
                } else if (mobile.length() != 10) {
                    JOptionPane.showMessageDialog(this, "invalid mobile no.(enter 10 digit no.)");
                    txtMobile.requestFocusInWindow();
                } else {
                    JOptionPane.showMessageDialog(this, "invalid course");
                    txtCourse.requestFocusInWindow();
                }
            }
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this, "Cannot add record");
            Logger.getLogger(registration.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_addActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:

        DefaultTableModel Df = (DefaultTableModel) display.getModel();
        int selectedRow = display.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Record not selected");
        } else {
            try {
                int rollNo = Integer.parseInt(Df.getValueAt(selectedRow, 0).toString());
                int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to delete?", "warning", JOptionPane.YES_NO_OPTION);

                if (dialogResult == JOptionPane.YES_OPTION) {

                    Class.forName("com.mysql.jdbc.Driver");

                    con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/student", "root", "Suman123");
                    insert = con1.prepareStatement("delete from registration where rollNo=?");
                    insert.setInt(1, rollNo);
                    insert.executeUpdate();

                    JOptionPane.showMessageDialog(this, "Record successfully deleted");
                    table_update();

                    txtRollNo.setText("");
                    txtName.setText("");
                    txtMobile.setText("");
                    txtCourse.setText("");
                    txtRollNo.requestFocus();
                }
            } catch (ClassNotFoundException | SQLException ex) {
                JOptionPane.showMessageDialog(this, "Cannot delete record");
                Logger.getLogger(registration.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void displayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_displayMouseClicked
        // TODO add your handling code here:
        DefaultTableModel Df = (DefaultTableModel) display.getModel();
        int selectedRow = display.getSelectedRow();

        txtRollNo.setText(Df.getValueAt(selectedRow, 0).toString());
        txtName.setText(Df.getValueAt(selectedRow, 1).toString());
        txtMobile.setText(Df.getValueAt(selectedRow, 2).toString());
        txtCourse.setText(Df.getValueAt(selectedRow, 3).toString());

    }//GEN-LAST:event_displayMouseClicked

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
        DefaultTableModel Df = (DefaultTableModel) display.getModel();
        int selectedRow = display.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Record not selected");
        } else {
            try {
                int rollNo = Integer.parseInt(Df.getValueAt(selectedRow, 0).toString());
                String RollNo = txtRollNo.getText();
                String name = txtName.getText();
                String mobile = txtMobile.getText();
                String course = txtCourse.getText();
                String Name = name.substring(0, 1).toUpperCase() + name.substring(1);
                String Course = course.substring(0, 1).toUpperCase() + course.substring(1);

                if (mobile.length() == 10 && name.length() > 2 && course.length() >= 4) {
                    Class.forName("com.mysql.jdbc.Driver");

                    con1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/student", "root", "Suman123");
                    insert = con1.prepareStatement("update registration set name=?, mobile=?, course=?,rollNo=? where rollNo=?");
                    insert.setString(1, Name);
                    insert.setString(2, mobile);
                    insert.setString(3, Course);
                    insert.setString(4, RollNo);
                    insert.setInt(5, rollNo);
                    insert.executeUpdate();

                    JOptionPane.showMessageDialog(this, "Record updated");
                    table_update();

                    txtRollNo.setText("");
                    txtName.setText("");
                    txtMobile.setText("");
                    txtCourse.setText("");
                    txtRollNo.requestFocus();
                } else {
                    if (name.length() < 3) {
                        JOptionPane.showMessageDialog(this, "invalid name(must be min 3 character)");
                        txtName.requestFocusInWindow();
                    } else if (mobile.length() != 10) {
                        JOptionPane.showMessageDialog(this, "invalid mobile no.(enter 10 digit no.)");
                        txtMobile.requestFocusInWindow();
                    } else {
                        JOptionPane.showMessageDialog(this, "invalid course");
                        txtCourse.requestFocusInWindow();
                    }
                }
            } catch (ClassNotFoundException | SQLException ex) {
                JOptionPane.showMessageDialog(this, "Record Not updated");
                Logger.getLogger(registration.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_editActionPerformed

    private void txtMobileKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMobileKeyPressed
        // TODO add your handling code here:
        txtMobile.requestFocus();
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' || evt.getKeyChar() == VK_BACK_SPACE) {
            txtMobile.setEditable(true);
        } else {
            txtMobile.setEditable(false);
            txtMobile.requestFocusInWindow();
        }

    }//GEN-LAST:event_txtMobileKeyPressed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        txtRollNo.setText("");
        txtName.setText("");
        txtMobile.setText("");
        txtCourse.setText("");
        txtRollNo.requestFocus();
        
        display.getSelectionModel().clearSelection();
    }//GEN-LAST:event_refreshActionPerformed

    private void txtRollNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRollNoKeyPressed
        // TODO add your handling code here:
        txtRollNo.requestFocus();
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' || evt.getKeyChar() == VK_BACK_SPACE) {
            txtRollNo.setEditable(true);
        } else {
            txtRollNo.setEditable(false);
            txtRollNo.requestFocusInWindow();
        }
    }//GEN-LAST:event_txtRollNoKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new registration().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton delete;
    private javax.swing.JTable display;
    private javax.swing.JButton edit;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refresh;
    private javax.swing.JTextField txtCourse;
    private javax.swing.JTextField txtMobile;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtRollNo;
    // End of variables declaration//GEN-END:variables
}
